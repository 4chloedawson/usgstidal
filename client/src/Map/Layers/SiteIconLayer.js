import { TextLayer, PolygonLayer} from 'deck.gl';

const NameLayer = (zoomToSite, data) =>
  new TextLayer({
    id: "site-text-layer",
    data,
    pickable: true,
    getPosition: d => [
      (d.NEpoint[1] + d.SWpoint[1]) / 2,
      (d.NEpoint[0] + d.SWpoint[0]) / 2
    ],
    getText: d => d.siteDisplayName,
    getSize: 32,
    getAngle: 0,
    getTextAnchor: "middle",
    fontFamily: "'Nunito', sans-serif",
    getAlignmentBaseline: "center",
    getColor: [0, 0, 0],
    onClick: d => {
      zoomToSite(d);
    }
  });

  function retrieveBounds(data){
    console.log("hello");
    var x = [[-122.6362, 48.7362, 0], [-122.6244, 48.7464, 0], [-122.6172, 48.7532, 0], [-122.6098, 48.7564, 0], [-122.6082, 48.7629, 0], [-122.6002, 48.7694, 0], [-122.5913, 48.7711, 0], [-122.5769, 48.7726, 0], [-122.5636, 48.7756, 0], [-122.5542, 48.777, 0], [-122.5361, 48.7759, 0], [-122.5299, 48.7697, 0], [-122.524, 48.766, 0], [-122.5175, 48.7649, 0], [-122.5132, 48.7617, 0], [-122.5101, 48.761, 0], [-122.5109, 48.7572, 0], [-122.5027, 48.7539, 0], [-122.495, 48.7531, 0], [-122.4891, 48.7501, 0], [-122.4908, 48.7425, 0], [-122.5031, 48.7322, 0], [-122.5068, 48.728, 0], [-122.5061, 48.7238, 0], [-122.5091, 48.7218, 0], [-122.5146, 48.722, 0], [-122.5201, 48.716, 0], [-122.515, 48.704, 0], [-122.5162, 48.7003, 0], [-122.5132, 48.6972, 0], [-122.5058, 48.6889, 0], [-122.5033, 48.6903, 0], [-122.508, 48.6973, 0], [-122.4984, 48.6967, 0], [-122.4929, 48.6885, 0], [-122.4899, 48.6782, 0], [-122.4913, 48.6754, 0], [-122.49, 48.6722, 0], [-122.4929, 48.6695, 0], [-122.493, 48.667, 0], [-122.5007, 48.6673, 0], [-122.4984, 48.6647, 0], [-122.5017, 48.6641, 0], [-122.5089, 48.6688, 0], [-122.5121, 48.6685, 0], [-122.5102, 48.6647, 0], [-122.5064, 48.6606, 0], [-122.5034, 48.6556, 0], [-122.4973, 48.655, 0], [-122.4856, 48.6417, 0], [-122.4777, 48.637, 0], [-122.4638, 48.6253, 0], [-122.4486, 48.6234, 0], [-122.4349, 48.6094, 0], [-122.4251, 48.599, 0], [-122.4307, 48.5871, 0], [-122.4372, 48.5774, 0], [-122.4437, 48.5746, 0], [-122.4431, 48.5716, 0], [-122.4531, 48.5664, 0], [-122.4574, 48.5629, 0], [-122.4655, 48.5601, 0], [-122.4585, 48.5554, 0], [-122.4715, 48.5568, 0], [-122.48, 48.5539, 0], [-122.4909, 48.5571, 0], [-122.4984, 48.5671, 0], [-122.4876, 48.5698, 0], [-122.4966, 48.5732, 0], [-122.494, 48.576, 0], [-122.5035, 48.5768, 0], [-122.5263, 48.5755, 0], [-122.5396, 48.5769, 0], [-122.5429, 48.5796, 0], [-122.5514, 48.5827, 0], [-122.5516, 48.5864, 0], [-122.5557, 48.5887, 0], [-122.5582, 48.5872, 0], [-122.6081, 48.6417, 0], [-122.6088, 48.645, 0], [-122.6099, 48.6471, 0], [-122.6095, 48.6508, 0], [-122.6134, 
48.6554, 0], [-122.6132, 48.6589, 0], [-122.6147, 48.6633, 0], [-122.6178, 48.6665, 0], [-122.6166, 48.6685, 0], [-122.6184, 48.6716, 0], [-122.6226, 48.6714, 0], [-122.6241, 48.6766, 0], [-122.6269, 48.6801, 0], [-122.6285, 48.6789, 0], [-122.6325, 48.681, 0], [-122.6353, 48.6856, 0], [-122.6391, 48.687, 0], [-122.643, 48.6904, 0], [-122.646, 48.6918, 0], [-122.6522, 48.6949, 0], [-122.6551, 48.6944, 0], [-122.6589, 48.696, 0], [-122.6592, 48.6976, 0], [-122.6626, 48.6976, 0], [-122.6644, 48.6984, 0], [-122.6672, 48.7054, 0], [-122.669, 48.7069, 0], [-122.6692, 48.7093, 0], [-122.6752, 48.7121, 0], [-122.6804, 48.7149, 0], [-122.6818, 48.7171, 0], [-122.6805, 48.7196, 0], [-122.6825, 48.7235, 0], [-122.6884, 48.7291, 0], [-122.6897, 48.7287, 0], [-122.6911, 48.7299, 0], [-122.6894, 48.7332, 0], [-122.6879, 48.7352, 0], [-122.6934, 48.7354, 0], [-122.6715, 48.7388, 0], [-122.6735, 48.7349, 0], [-122.6732, 48.7321, 0], [-122.6715, 48.7315, 0], [-122.6672, 48.7323, 0], [-122.6631, 48.7314, 0], [-122.6624, 48.7279, 0], [-122.6598, 48.726, 0], [-122.658, 48.7214, 0], [-122.6542, 48.718, 0], [-122.6514, 48.7162, 0], [-122.6522, 48.7144, 0], [-122.6493, 48.7116, 0], [-122.6473, 48.7086, 0], [-122.6442, 48.7063, 0], [-122.6406, 48.7046, 0], [-122.6366, 48.7012, 0], [-122.6311, 48.697, 0], [-122.629, 48.6961, 0], [-122.6266, 48.6958, 0], [-122.6216, 48.6935, 0], [-122.6146, 48.6937, 0], [-122.6081, 48.6968, 0], [-122.6046, 48.7006, 0], [-122.6061, 48.7053, 0], [-122.6085, 48.7112, 0], [-122.613, 48.7157, 0], [-122.616, 48.7128, 0], [-122.6165, 48.7078, 0], [-122.6216, 48.7065, 0], [-122.6277, 48.7083, 0], [-122.6328, 48.7109, 0], [-122.6378, 48.7103, 0], [-122.6424, 48.7087, 0], 
[-122.6474, 48.7107, 0], [-122.6502, 48.7159, 0], [-122.6473, 48.7177, 0], [-122.642, 48.7295, 0], [-122.6362, 48.7362, 0]];
     return x;
  }

const boxlayer = (data, zoomToSite) =>
  new PolygonLayer({
    id: "polygon-layer-outlines",
    data,
    pickable: true,
    stroked: true,
    filled: true,
    wireframe: true,
    lineWidthMinPixels: 2,
    getFillColor: d => [0, 0, 0, 0,],
    getLineColor: [0, 0, 0, 0],
    getLineWidth: 1,
    pickingRadius: 5,
    //getPolygon: x => retrieveBounds(x),
    getPolygon: x => {
       return [
        [x.NEpoint[1], x.NEpoint[0], 0],
        [x.NEpoint[1], x.SWpoint[0], 0],
         [x.SWpoint[1], x.SWpoint[0], 0],
        [x.SWpoint[1], x.NEpoint[0], 0]
      ];
    },
    onClick: d => {
      zoomToSite(d);
    }
  });


  // const boxlayer = (data, zoomToSite) =>
  // new PathLayer({
  //   id: "path-layer-outlines",
  //   data,
  //   pickable: true,
  //   stroked: true,
  //   filled: true,
  //   wireframe: true,
  //   lineWidthMinPixels: 1,
  //   getFillColor: d => [0, 0, 0,0],
  //   getLineColor: [80, 80, 80],
  //   getLineWidth: 1,
  //   pickingRadius: 5,
  //   getPath: x => x.bounds,
  //   onClick: d => {
  //     zoomToSite(d);
  //   }
  // });

export const SiteIconLayers = (onSiteClick, spatialDomainsSites) => [
  //SiteIconLayer(onSiteClick, spatialDomainsSites),
  boxlayer(spatialDomainsSites, onSiteClick),
  NameLayer(onSiteClick, spatialDomainsSites)
];
